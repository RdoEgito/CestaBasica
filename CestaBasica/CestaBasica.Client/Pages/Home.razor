@page "/"
@rendermode InteractiveAuto
@using CestaBasica.Client.Components
@using System.Text
@inject IJSRuntime JsRuntime

<PageTitle>Cesta Básica</PageTitle>

<div class="items">
    @* 1 *@
    <br />
    <select class="select-items" @bind="_items[0].SelectedQuantity">
        @foreach (var qty in _quantities)
        {
            <option value="@qty">@qty</option>
        }
    </select>
    <select class="select-items" @bind="_items[0].SelectedItem">
        @foreach (var item in _itemsToDonate)
        {
            <option value="@item">@item</option>
        }
    </select>

    @* 2 *@
    <br />
    <select class="select-items" @bind="_items[1].SelectedQuantity">
        @foreach (var qty in _quantities)
        {
            <option value="@qty">@qty</option>
        }
    </select>
    <select class="select-items" @bind="_items[1].SelectedItem">
        @foreach (var item in _itemsToDonate)
        {
            <option value="@item">@item</option>
        }
    </select>

    @* 3 *@
    <br />
    <select class="select-items" @bind="_items[2].SelectedQuantity">
        @foreach (var qty in _quantities)
        {
            <option value="@qty">@qty</option>
        }
    </select>
    <select class="select-items" @bind="_items[2].SelectedItem">
        @foreach (var item in _itemsToDonate)
        {
            <option value="@item">@item</option>
        }
    </select>

@*     @foreach (var input in _items)
    {
        <Item Quantities=_quantities Items=_itemsToDonate OnChangeCallback=UpdateItem />
        <br />
        <select class="select-items" @bind="@input.SelectedQuantity">
            @foreach (var qty in _quantities)
            {
                <option value="@qty">@qty</option>
            }
        </select>
        <select class="select-items">
            @foreach (var item in _itemsToDonate)
            {
                <option value="@item">@item</option>
            }
        </select>
        <button class="square-button" @onclick="() => RemoveItem(input)"><svg xmlns="http://www.w3.org/2000/svg" height="15" width="12" viewBox="0 0 384 512" fill="#ff0000"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M376.6 84.5c11.3-13.6 9.5-33.8-4.1-45.1s-33.8-9.5-45.1 4.1L192 206 56.6 43.5C45.3 29.9 25.1 28.1 11.5 39.4S-3.9 70.9 7.4 84.5L150.3 256 7.4 427.5c-11.3 13.6-9.5 33.8 4.1 45.1s33.8 9.5 45.1-4.1L192 306 327.4 468.5c11.3 13.6 31.5 15.4 45.1 4.1s15.4-31.5 4.1-45.1L233.7 256 376.6 84.5z" /></svg></button>
    } *@
</div>

@* <button class="btn-secondary btn" @onclick="AddItem">Adicionar item ➕</button> *@
<button class="btn-primary btn" @onclick="SendAsync">Enviar</button>

@code {
    private readonly List<int> _quantities = Enumerable.Range(1, 5).ToList();
    private readonly List<string> _itemsToDonate = new List<string> 
    { 
        "Arroz", 
        "Feijão",
        "Macarrão", 
        "Cuscuz"
    };

    private Item[] _items =
        {
            new Item(1, "Arroz"),
            new Item(1, "Arroz"),
            new Item(1, "Arroz"),
        };

    private Dictionary<string, int> _options = new Dictionary<string, int>();

    // Public methods
    public Home()
    {
        foreach (var itemToDonate in _itemsToDonate)
        {
            _options.Add(itemToDonate, 0);
        }
    }

    private async Task SendAsync()
    {
        var sb = new StringBuilder();

        sb.AppendLine("Itens escolhidos");
        foreach (var item in _items)
        {
            sb.AppendLine($"{item.SelectedQuantity} {item.SelectedItem}");
        }

        bool confirmed = await JsRuntime.InvokeAsync<bool>(
            "confirm",
            $"{sb}\nTem certeza de que deseja enviar?");
    }
}